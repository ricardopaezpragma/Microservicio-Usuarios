# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java devops CI/CD with Gradle

on:
  push:
    branches: [ "DevOps" ]
  pull_request:
    branches: [ "DevOps" ]

permissions:
  contents: read

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build

    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Build and analyze
      run: ./gradlew build jacocoTestReport sonarqube --info
      env:
       # Needed to get some information about the pull request, if any
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       # SonarCloud access token should be generated from https://sonarcloud.io/account/security/
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Verify Coverage Threshold
      run: |
          COVERAGE_THRESHOLD=80
          REPORT_PATH="path/to/your/report.json"
          coverage=$(cat $REPORT_PATH | jq -r '.coverage')
          if (( $(awk "BEGIN {print ($coverage >= $COVERAGE_THRESHOLD)}") )); then
            echo "Coverage meets the threshold."
          else
            echo "Coverage is below the threshold. Current coverage: $coverage%"
            exit 1
          fi    


    - name: Build & push Docker image
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: ricardopaezpragma/plazoleta
        tags: latest
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

