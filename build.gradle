plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id("org.springdoc.openapi-gradle-plugin") version "1.6.0"
	id "org.sonarqube" version "3.3"
}

group = 'com.pragma'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
ext {
	set('springCloudVersion', "2022.0.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws-parameter-store-config:2.1.3.RELEASE'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:4.0.1'
	implementation 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
tasks.named('test') {
	useJUnitPlatform()
}
sonarqube {
	properties {
		property "sonar.projectKey", "ricardopaezpragma_Microservicio-Usuarios"
		property "sonar.organization", "ricardopaezpragma"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}
